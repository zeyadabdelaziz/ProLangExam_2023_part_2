public class Optional<T> where T : class
{
    private readonly T _value;

    public Optional(T value)
    {
        _value = value;
    }
    public bool HasValue => _value != null;

    public T Value
    {
        get
        {
            if (_value == null)
            {
                throw new InvalidOperationException("Optional object does not have a value.");
            }
            return _value;
        }
    }

    public override string ToString()
    {
        return _value?.ToString() ?? string.Empty;
    }
}
var name1 = new Optional<string>("Marcin");
Console.WriteLine(name1.HasValue);  
Console.WriteLine(name1);  
Console.WriteLine(name1.Value);  

var name2 = new Optional<string>(null);
Console.WriteLine(name2.HasValue);  
Console.WriteLine(name2); 
Console.WriteLine(name2.Value);  
